context Employee inv emailFormat:
  self.email->matches('^[^@]+@[^@]+\.[^.]+$')

context Employee inv passwordLength:
  size(self.password) >= 8

context Employee pre updateEmployeeEmail:
  let originalEmail: String = self.email@pre;

context Employee post updateEmployeeEmail:
  self.email = originalEmail implies self.email = self.email@pre

context Employee pre nameNotNull:
  self.name <> null

context Employee post dateAfterToday:
  self.date > today()

context Employee inv updateEmployeeEmail:
  let originalEmployee: Employee = self@pre;
  originalEmployee.email = self.email

context BlockUser inv userIdNotNull:
   self.userId <> null

context DeleteArticle inv titleNotNull:
   self.title <> null

context Article pre validJournalist:
  let originalJournalist: Journalist = self.journalist@pre;
  originalJournalist.id = self.jo_id;

context Article post validJournalist:
  let updatedJournalist: Journalist = self.journalist;
  updatedJournalist.id = self.jo_id implies not updatedJournalist.oclIsUndefined()

context Article inv contentNotNull:
  self.content <> null

context Article inv titleNotNull:
   self.title <> null

context User pre usernameNotNull:
  not self.username->isEmpty()

context Journalist inv usernameNotNull:
  not self. Username->isEmpty()

context Admin inv usernameNotNull:
  not self.username->isEmpty()

context User inv passwordNotNull:
  not self.password->isEmpty()

context Journalist inv passwordNotNull:
  not self.password->isEmpty()

context Admin inv passwordNotNull:
  not self.password->isEmpty()

context User post validLogin:
  let user: User = self@pre;
  let loggedInUser: User = user->select(u: User | u.username = self.username and u.password = self.password)->asSet()->any(u: User);
  not loggedInUser.oclIsUndefined()

context Payment inv priceNotNull:
  not self.price->isEmpty()

context Payment pre validUser:
  let originalUser: User = self.user@pre;
  originalUser.id = self.userId;

context Article inv titleNotNullForDelete:
  not self.title->isEmpty()

context Employee::updateEmployeeEmail(email: String)
post: 
    self.email = email

